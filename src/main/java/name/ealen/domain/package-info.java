/**
 * DDD: domain 领域层
 * 领域层主要负责表达业务概念,业务状态信息和业务规则。
 * Domain层是整个系统的核心层,几乎全部的业务逻辑会在该层实现。
 * 领域模型层主要包含以下的内容:
 * 实体(Entities):具有唯一标识的对象
 * 值对象(Value Objects): 无需唯一标识的对象
 * 领域服务(Domain Services): 一些行为无法归类到实体对象或值对象上,本质是一些操作,而非事物
 * 聚合/聚合根(Aggregates,Aggregate Roots):
        聚合是指一组具有内聚关系的相关对象的集合,每个聚合都有一个root和boundary
 * 工厂(Factories): 创建复杂对象,隐藏创建细节
 * 仓储(Repository): 提供查找和持久化对象的方法
 *
 * Aggregate（聚合）：聚合代码包的根目录，实际项目中以实际业务属性的名称来命名。聚合定义了领域对象之间的关系和边界，实现领域模型的内聚。
 *
 * Entity（实体）：存放实体（含聚合根、实体和值对象）相关代码。同一实体所有相关的代码（含对同一实体类多个对象操作的方法，如对多个对象的 count 等）都放在一个实体类中。
 *
 * Service（领域服务）：存放对多个不同实体对象操作的领域服务代码。这部分代码以领域服务的形式存在，在设计时一个领域服务对应一个类。
 *
 * Repository（仓储）：存放聚合对应的查询或持久化领域对象的代码，通常包括仓储接口和仓储实现方法。为了方便聚合的拆分和组合，我们设定一个原则：一个聚合对应一个仓储。
 *
 * 特别说明：按照 DDD 分层原则，仓储实现本应属于基础层代码，但为了微服务代码拆分和重组的便利性，我们把聚合的仓储实现代码放到了领域层对应的聚合代码包内。如果需求或者设计发生变化导致聚合需要拆分或重新组合时，我们可以聚合代码包为单位，轻松实现微服务聚合的拆分和组合。
 */
package name.ealen.domain;